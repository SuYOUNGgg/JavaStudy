//클래스와 객체(인스턴스)의 차이점
//클래스: 코드, 객체(인스턴스): 메모리 클래스에 적재된 것




//객체지향 프로그래밍의 3가지 특성
//캡슐화 : 속성(상태 or 데이터), 메소드(동작 or행위)하나로 묶는 것. 코드에서는 클래스를 통해서 구성하는 방법.
//		data  hide -멤버변수들을 private접근자로 변경한다.
//상속성 : 이미 정의된 상위클래스(부모클래스)의 모든 속성과 메소드를 하위클래스(자식클래스)가 사용할 수 있도록 하는 기능. 코드 재사용가능하게 함.
//다형성 : 객체가 연산을 수행할 떄 동일한 메소드에 대해서 각각의 객체가 가지고 있는 특성을 나타내는 방법. 상속관계가 되어야함. OVERRIDE를 통해서 구현됨.

//override는 상속관계에서 상위 클래스의 메소드를 하위클래스에서 쓸 수 있게 하는 것
//overlode는 메소드의 이름이 같고, 파라미터의 수가 다를 때 다른 값을 출력하게 하는 것

//기본적으로 자료형은 return이 원칙.


	
	
	
//구구단	
public class Test1 {	
	public static void main(String[] args) {
	
	for(int a=1; a<=9; a++) {
		int X =0;
		for(int b=1; b<=9; b++) {
			X=a*b;
			System.out.println( a + "*" + b + "=" + X );			
			}
		
		}
	}
}

